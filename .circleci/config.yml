version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.0.0
jobs:
 build:
  # Variable expansion in working_directory not supported at this time (new content 2 to 3)
  # You will need to modify the code below to reflect your github account/repo setup
  working_directory: /go/src/github.com/tinchocafferata/invoicer-chapter2to3
  environment:
     GO15VENDOREXPERIMENT: 1
  docker:
   - image: circleci/golang:1.10
     #The awscli beanstalk command freezes waiting for user input and the job
     #never finishes, this environment variable must be set to prevent that
     environment: 
      PAGER: cat
     
  steps:
   - checkout
   - setup_remote_docker
   - aws-cli/setup:
         profile-name: circleci
  
   - run: echo 'export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"' >> $BASH_ENV
   - run: echo 'export GOPATH_BASE="${GOPATH_HEAD}/src/github.com/${CIRCLE_PROJECT_USERNAME}"' >> $BASH_ENV
   - run: echo 'export DOCKER_REPO="$(if [ ${CIRCLE_PROJECT_USERNAME} == 'Securing-DevOps' ]; then echo securingdevops; else echo $DOCKER_USER; fi)"' >> $BASH_ENV
   - run: mkdir -p "${GOPATH_BASE}"
   - run: mkdir -p "${GOPATH_HEAD}/bin"
   - run: go get github.com/govend/govend
       
   - run:
       name: Build application container
       command: |
         go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
         [ ! -e bin ] && mkdir bin;
         cp "${GOPATH_HEAD}/bin/${CIRCLE_PROJECT_REPONAME}" bin/invoicer;
         docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
   - run:
       name: Run application in background
       command: |
         docker run ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME}
       background: true
       
   - run:
       name: ZAP baseline test of application
       # Only fail on error code 1, which indicates at least one FAIL was found.
       # error codes 2 & 3 indicate WARN or other, and should not break the run
       # The 172.17.0.2 IP address is internal to the virtual machine that is running the Docker engine
       # ZAP Docker image documentation: https://github.com/zaproxy/zaproxy/wiki/Docker
       # ZAP Baseline Scan documentation: https://github.com/zaproxy/zaproxy/wiki/ZAP-Baseline-Scan
       # -u flag is used to load a configuration file from a URL
       # -t points the target to scan
       # We have an OR clause, so both statements will be evaluated always. On the first clause, both commands need to run,
       # and they will set the exit status that is later evaluated in the second condition. We need the second condition to
       # always run, so that we can continue the job or stop depending on the results of the scan

       command: |
         (
         docker pull owasp/zap2docker-weekly && \
         docker run -t owasp/zap2docker-weekly zap-baseline.py \
             -u https://raw.githubusercontent.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/master/zap-baseline.conf \
             -t http://172.17.0.2:8080/ || \
         if [ $? -ne 1 ]; then exit 0; else exit 1; fi;
         )
          
   - deploy:
       command: |
         if [ "${CIRCLE_BRANCH}" == "master" ]; then
           docker login -u ${DOCKER_USER} -p ${DOCKER_PASS};
           go install --ldflags '-extldflags "-static"' \
           github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
           mkdir -p bin;
           cp "$GOPATH_HEAD/bin/${CIRCLE_PROJECT_REPONAME}" bin/invoicer;
           docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
           docker images --no-trunc | awk '/^app/ {print $3}' | \
             sudo tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt;
           docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
           sudo apt-get update && sudo apt-get install -yy less;
           export TERM=dumb && aws elasticbeanstalk update-environment \
            --application-name invoicer --environment-id e-ybjw8c5g9f \
            --version-label invoicer-api;
         fi
